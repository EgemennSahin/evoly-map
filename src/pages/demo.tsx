import Head from "next/head";
import { NavBar } from "@/components/nav-bar";
import { ChangeEvent, FormEvent, useState } from "react";
import dynamic from "next/dynamic";
const Calendly = dynamic(() => import("@/components/calendly-popup"), {
  ssr: false,
});

export default function Demo() {
  const [firstName, setFirstName] = useState("");
  const [lastName, setLastName] = useState("");
  const [email, setEmail] = useState("");
  const [guests, setGuests] = useState<string[]>([]);
  const [message, setMessage] = useState("");
  const [prefill, setPrefill] = useState({});

  const [modalOpen, setModalOpen] = useState(false);

  const handleNameChange = (event: ChangeEvent<HTMLInputElement>) => {
    setFirstName(event.target.value);
  };

  const handleLastNameChange = (event: ChangeEvent<HTMLInputElement>) => {
    setLastName(event.target.value);
  };

  const handleEmailChange = (event: ChangeEvent<HTMLInputElement>) => {
    setEmail(event.target.value);
  };

  const handleGuestEmailChange = (event: ChangeEvent<HTMLInputElement>) => {
    const index = parseInt(event.target.id);
    const newGuests = [...guests];
    newGuests[index] = event.target.value;
    setGuests(newGuests);
  };

  const handleMessageChange = (event: ChangeEvent<HTMLTextAreaElement>) => {
    setMessage(event.target.value);
  };

  const handleSubmit = (event: FormEvent) => {
    event.preventDefault();

    setPrefill({
      email,
      name: `${firstName} ${lastName}`,
      guests: guests.filter((guest) => guest !== ""),
      customAnswers: { a1: message },
    });

    setModalOpen(true);
  };

  function handleAddEmail() {
    // add another email input field
    const lengthOfEmailInputs = guests.length;
    if (lengthOfEmailInputs > 10) return;
    setGuests([...guests, ""]);

    console.log("Emails:", guests);
  }

  function handleRemoveEmail(index: number) {
    setGuests(guests.slice(0, index).concat(guests.slice(index + 1)));
  }

  return (
    <>
      <Head>
        <title>Demo - evoly</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NavBar />

      <main className="relative h-screen flex flex-col items-center justify-start pt-40">
        <h1 className="mb-12 z-10 text-white font-mono font-bold text-center text-4xl sm:text-5xl md:text-6xl lg:text-7xl">
          Book a demo call
        </h1>

        <div className="sm:px-12 px-6 py-8 w-fit mx-auto bg-neutral-50 shadow-2xl drop-shadow-2xl rounded-xl z-10 ">
          <form onSubmit={handleSubmit} className="mt-4 flex flex-col gap-2">
            <div className="flex flex-col gap-2 md:flex-row">
              <input
                type="text"
                name="name"
                id="name"
                placeholder="Name"
                value={firstName}
                onChange={handleNameChange}
                className="border border-neutral-300 rounded-md p-2 grow"
              />
              <input
                type="text"
                name="lastName"
                id="lastName"
                placeholder="Last name"
                value={lastName}
                onChange={handleLastNameChange}
                className="border border-neutral-300 rounded-md p-2 grow"
              />
            </div>

            <div className="flex gap-2">
              <input
                type="email"
                name="email"
                id="email"
                placeholder="Email*"
                value={email}
                onChange={handleEmailChange}
                className={`border border-neutral-300 rounded-md p-2 grow`}
              />
              {guests.length < 10 && (
                <button
                  type="button"
                  onClick={handleAddEmail}
                  className="bg-teal-200 opacity-75 w-12 hover:opacity-100 flex rounded-lg text-teal-900 text-3xl"
                >
                  <span className="mx-auto">+</span>
                </button>
              )}
            </div>

            {guests.map((emailInput, index) => (
              <div key={index} className="flex gap-2">
                <input
                  type="email"
                  name="email"
                  id={index.toString()}
                  onChange={handleGuestEmailChange}
                  placeholder={"Guest Email " + (index + 1)}
                  className="border border-neutral-300 rounded-md p-2 grow"
                />
                <button
                  type="button"
                  onClick={() => handleRemoveEmail(index)}
                  className="bg-red-200 opacity-50 w-12 hover:opacity-100 flex rounded-lg text-red-900 text-3xl"
                >
                  <span className="mx-auto">-</span>
                </button>
              </div>
            ))}

            <textarea
              name="message"
              id="message"
              placeholder="Please share anything that will help prepare for our meeting"
              value={message}
              onChange={handleMessageChange}
              className="border border-neutral-300 rounded-md p-2 grow"
            />
            <button
              type="submit"
              className="bg-blue-700 place-self-end w-fit transition-colors px-4 py-2 text-white font-semibold rounded-md hover:shadow-md"
            >
              Book a demo
            </button>
          </form>
        </div>
        <div className="absolute z-0 top-0 bg-gradient-to-br from-neutral-300 via-teal-500 to-cyan-400 w-screen h-screen md:h-2/3" />
      </main>

      <div id="root">
        <Calendly
          url="https://calendly.com/hassanlantry/evoly?month=2023-01"
          open={modalOpen}
          onModalClose={() => setModalOpen(false)}
          prefill={prefill}
        />
      </div>
    </>
  );
}
